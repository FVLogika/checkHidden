(function($){$.fn.checkHidden=function(o){const s=$.extend({classFilter:'.checkHidden',hiddenSuffix:'_hidden',oldSuffix:'_hidden_old'},o);function i($c){const n=$c.attr('name'),v=$c.is(':checked')?'on':'off';if($(`input[name="${n}${s.oldSuffix}"]`).length==0)$c.after(`<input type="hidden" name="${n}${s.oldSuffix}" value="${v}">`);if($(`input[name="${n}${s.hiddenSuffix}"]`).length==0)$c.after(`<input type="hidden" name="${n}${s.hiddenSuffix}" value="${v}">`);}$(document).ready(function(){$(`${s.classFilter}.form-check-input[name]`).each(function(){i($(this));});});$(document).on('change',`${s.classFilter}.form-check-input[name]`,function(){const n=$(this).attr('name'),v=$(this).is(':checked')?'on':'off';$(`input[name="${n}${s.hiddenSuffix}"]`).val(v);});$(document).on('set-old',`${s.classFilter}.form-check-input[name]`,function(e,v){const st=v==1||v===true?'on':'off',n=$(this).attr('name');$(this).prop('checked',st==='on');$(`input[name="${n}${s.hiddenSuffix}"]`).val(st);$(`input[name="${n}${s.oldSuffix}"]`).val(st);});$(document).on('set-val',`${s.classFilter}.form-check-input[name]`,function(e,v){const st=v==1||v===true?'on':'off',n=$(this).attr('name');$(this).prop('checked',st==='on');$(`input[name="${n}${s.hiddenSuffix}"]`).val(st);});const ob=new MutationObserver(function(m){m.forEach(function(mu){$(mu.addedNodes).each(function(){const $n=$(this);if($n.is(`${s.classFilter}.form-check-input[name]`))i($n);$n.find(`${s.classFilter}.form-check-input[name]`).each(function(){i($(this));});});});});ob.observe(document.body,{childList:true,subtree:true});return this;};})(jQuery);
